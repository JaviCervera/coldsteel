#pragma once

#include "common.h"

IGUIElement *CreateButton(int x, int y, int width, int height, const char *text, IGUIElement *parent);
IGUIElement *CreateCheckBox(int x, int y, int width, int height, const char *text, IGUIElement *parent);
IGUIElement *CreateComboBox(int x, int y, int width, int height, IGUIElement *parent);
IGUIElement *CreateContextMenu(int x, int y, int width, int height, IGUIElement *parent);
IGUIElement *CreateEditBox(int x, int y, int width, int height, int type, IGUIElement *parent);
IGUIElement *CreateImage(int x, int y, int width, int height, ITexture *texture, IGUIElement *parent);
IGUIElement *CreateListBox(int x, int y, int width, int height, IGUIElement *parent);
IGUIElement *CreateMenu(const char *text, IGUIElement *parent);
IGUIElement *CreateScrollbar(int x, int y, int width, int height, bool_t horizontal, int max, int step, IGUIElement *parent);
IGUIElement *CreateTabbar(int x, int y, int width, int height, IGUIElement *parent);
IGUIElement *CreateText(int x, int y, int width, int height, const char *text, bool_t border, IGUIElement *parent);
IGUIElement *CreateToolbar(IGUIElement *parent);
IGUIElement *CreateWindow(int x, int y, int width, int height, bool_t modal, IGUIElement *parent);
void FreeControl(IGUIElement *control);
int ControlType(IGUIElement *control);
void SetControlEnabled(IGUIElement *control, bool_t enabled);
bool_t ControlEnabled(IGUIElement *control);
void SetControlVisible(IGUIElement *control, bool_t visible);
bool_t ControlVisible(IGUIElement *control);
IGUIElement *ControlParent(IGUIElement *control);
int ControlNumChildren(IGUIElement *control);
IGUIElement *ControlChild(IGUIElement *control, int index);
void SetControlShape(IGUIElement *control, int x, int y, int width, int height);
int ControlX(IGUIElement *control);
int ControlY(IGUIElement *control);
int ControlWidth(IGUIElement *control);
int ControlHeight(IGUIElement *control);
void SetControlText(IGUIElement *control, const char *text);
const char *ControlText(IGUIElement *control);
void SetControlTooltip(IGUIElement *control, const char *tooltip);
const char *ControlTooltip(IGUIElement *control);
void SetControlTexture(IGUIElement *control, ITexture *texture, bool_t alpha);
void SetControlFont(IGUIElement *control, IGUIFont *font);
IGUIFont *ControlFont(IGUIElement *control);
void SetControlColor(IGUIElement *control, int color);
void ClearControlColor(IGUIElement *control);
int ControlColor(IGUIElement *control);
void SetControlChecked(IGUIElement *control, bool_t checked);
bool_t ControlChecked(IGUIElement *control);
void SetControlValue(IGUIElement *control, int value);
int ControlValue(IGUIElement *control);
int ControlId(IGUIElement *control);
int AddControlItem(IGUIElement *control, const char *text, int id);
int ControlNumItems(IGUIElement *control);
void SetControlItemEnabled(IGUIElement *control, int index, bool_t enable);
bool_t ControlItemEnabled(IGUIElement *control, int index);
void SetControlItemChecked(IGUIElement *control, int index, bool_t check);
bool_t ControlItemChecked(IGUIElement *control, int index);
void SelectControlItem(IGUIElement *control, int index);
int SelectedControlItem(IGUIElement *control);
void SetControlItemText(IGUIElement *control, int index, const char *text);
const char *ControlItemText(IGUIElement *control, int index);
void RemoveControlItem(IGUIElement *control, int index);
void RemoveControlItems(IGUIElement *control);
void AddMenuSeparator(IGUIElement *menu);
void DrawGUI();
bool_t PrepareNextGUIEvent();
int GUIEventType();
IGUIElement *GUIEventControl();
int GUIEventMenuId();

void _PostEvent(int type, IGUIElement *control, int menuId);
